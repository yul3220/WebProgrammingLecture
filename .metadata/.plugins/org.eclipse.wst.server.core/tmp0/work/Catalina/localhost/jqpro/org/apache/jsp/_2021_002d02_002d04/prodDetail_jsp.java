/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.107
 * Generated at: 2021-02-04 10:07:14 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp._2021_002d02_002d04;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import kr.or.ddit.prod.ProdVO;
import java.util.List;
import kr.or.ddit.ibatis.config.SqlMapClientFactory;
import com.ibatis.sqlmap.client.SqlMapClient;

public final class prodDetail_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
 
	// 1. 클라이언트 요청시 전송되는 데이터 받기
	String prodId = request.getParameter("id");

	// 2. sqlMapClient객체 열기
	SqlMapClient client = SqlMapClientFactory.getClient();

	// 3. sql문 실행 - select
	ProdVO vo =  (ProdVO)client.queryForObject("prod.selectBydetails", prodId);

      out.write("\r\n");
      out.write("<table class=\"tb1\" border=\"1\">\r\n");
      out.write("<tr><td>PROD_ID</td>\r\n");
      out.write("<td>");
      out.print(vo.getProd_id() );
      out.write("</td></tr>\r\n");
      out.write("\r\n");
      out.write("<tr><td>PROD_NAME</td>\r\n");
      out.write("<td>");
      out.print(vo.getProd_name() );
      out.write("</td></tr>\r\n");
      out.write("\r\n");
      out.write("<tr><td>PROD_LGU</td>\r\n");
      out.write("<td>");
      out.print(vo.getProd_lgu() );
      out.write("</td></tr>\r\n");
      out.write("\r\n");
      out.write("<tr><td>PROD_BUYER</td>\r\n");
      out.write("<td>");
      out.print(vo.getProd_buyer() );
      out.write("</td></tr>\r\n");
      out.write("\r\n");
      out.write("<tr><td>PROD_COST</td>\r\n");
      out.write("<td>");
      out.print(vo.getProd_cost() );
      out.write("</td></tr>\r\n");
      out.write("\r\n");
      out.write("<tr><td>PROD_PRICE</td>\r\n");
      out.write("<td>");
      out.print(vo.getProd_price() );
      out.write("</td></tr>\r\n");
      out.write("\r\n");
      out.write("<tr><td>PROD_SALE</td>\r\n");
      out.write("<td>");
      out.print(vo.getProd_sale() );
      out.write("</td></tr>\r\n");
      out.write("\r\n");
      out.write("<tr><td>PROD_OUTLINE</td>\r\n");
      out.write("<td>");
      out.print(vo.getProd_outline() );
      out.write("</td></tr>\r\n");
      out.write("\r\n");
      out.write("<tr><td>PROD_DETAIL</td>\r\n");
      out.write("<td>");
      out.print(vo.getProd_detail() );
      out.write("</td></tr>\r\n");
      out.write("\r\n");
      out.write("<tr><td>PROD_TOTALSTOCK</td>\r\n");
      out.write("<td>");
      out.print(vo.getProd_totalstock() );
      out.write("</td></tr>\r\n");
      out.write("\r\n");
      out.write("<tr><td>PROD_INSDATE</td>\r\n");
      out.write("<td>");
      out.print(vo.getProd_insdate() );
      out.write("</td></tr>\r\n");
      out.write("\r\n");
      out.write("<tr><td>PROD_PROPERSTOCK</td>\r\n");
      out.write("<td>");
      out.print(vo.getProd_properstock() );
      out.write("</td></tr>\r\n");
      out.write("\r\n");
      out.write("<tr><td>PROD_DELIVERY</td>\r\n");
      out.write("<td>");
      out.print(vo.getProd_delivery());
      out.write("</td></tr>\r\n");
      out.write("\r\n");
      out.write("<tr><td>PROD_UNIT</td>\r\n");
      out.write("<td>");
      out.print(vo.getProd_unit() );
      out.write("</td></tr>\r\n");
      out.write("</table>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
